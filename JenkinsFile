pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                script {
                    sh 'mvn clean package' // Using Maven for building
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                script {
                    sh 'mvn test' // Using Maven for running tests
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                script {
                    sh 'npm install -g eslint'
                    sh 'eslint src/' // Using ESLint for code analysis
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                script {
                    sh 'npm install -g owasp-zap'
                    sh 'zap-baseline.py -t http://localhost:8080' // Using OWASP ZAP for security scanning
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                script {
                    sh 'scp target/*.jar user@staging-server:/path/to/deploy' // Using SCP for deployment
                }
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                script {
                    sh 'mvn verify' // Running integration tests on staging
                }
            }
        }
        
        stage('Deploy to Production') {
            steps {
                script {
                    sh 'scp target/*.jar user@production-server:/path/to/deploy' // Using SCP for deployment
                }
            }
        }
    }
    
    post {
        always {
            cleanWs() // Clean workspace after pipeline completion
        }
    }
}

